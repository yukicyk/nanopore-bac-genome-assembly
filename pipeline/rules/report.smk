# ================================================================= #
#                         RULE: REPORTING                           #
# ================================================================= #
# This rule aggregates all QC and evaluation results into a single MultiQC report.

rule multiqc:
    input:
        # We create a single list of all dependencies by concatenating the
        # lists generated by each expand() call. This is the correct syntax.
        expand("results/{sample}/qc/nanoplot/NanoPlot-report.html", sample=ONT_SAMPLES) +
        expand("results/{sample}/qc/fastqc.done", sample=ILLUMINA_SAMPLES) +
        expand("results/{sample}/evaluation/quast/", sample=ASSEMBLY_SAMPLES)
    output:
        "results/multiqc_report.html"
    log:
        "logs/multiqc.log"
    conda:
        "../envs/report.yaml" # Assumed path
    params:
        # Give the report a nice title.
        title="Bacterial WGS Pipeline Summary"
    shell:
        # The '.' tells MultiQC to scan the entire project directory from the top.
        # It will automatically find all the relevant files from the input list and more.
        # --force overwrites previous reports.
        "multiqc . --filename {output} --title \"{params.title}\" --force &> {log}"